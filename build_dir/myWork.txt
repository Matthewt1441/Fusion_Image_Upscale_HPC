diff --git a/build_dir/CMakeCache.txt b/build_dir/CMakeCache.txt
index 28d80fe..e2f78d8 100644
--- a/build_dir/CMakeCache.txt
+++ b/build_dir/CMakeCache.txt
@@ -538,7 +538,7 @@ CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
 CUDA_64_BIT_DEVICE_CODE-ADVANCED:INTERNAL=1
 //List of intermediate files that are part of the cuda dependency
 // scanning.
-CUDA_ADDITIONAL_CLEAN_FILES:INTERNAL=/home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/build_dir/CMakeFiles/FusionImage_Solution.dir/Fusion_Image_Upscale/FusionImage/FusionImage_Solution_generated_solution.cu.o.depend
+CUDA_ADDITIONAL_CLEAN_FILES:INTERNAL=/home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/build_dir/CMakeFiles/FusionImage_Solution.dir/Fusion_Image_Upscale/FusionImage/FusionImage_Solution_generated_solution.cu.o.depend;/home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/build_dir/CMakeFiles/GUAS_TEST_BENCH_Solution.dir/Fusion_Image_Upscale/FusionImage/GUASS_TEST_BENCH/GUAS_TEST_BENCH_Solution_generated_solution.cu.o.depend;/home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/build_dir/CMakeFiles/BIC_TEST_BENCH2_Solution.dir/Fusion_Image_Upscale/FusionImage/BIC_TEST_BENCH2/BIC_TEST_BENCH2_Solution_generated_solution.cu.o.depend
 //ADVANCED property for variable: CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE
 CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE-ADVANCED:INTERNAL=1
 //ADVANCED property for variable: CUDA_BUILD_CUBIN
diff --git a/build_dir/CMakeFiles/CMakeRuleHashes.txt b/build_dir/CMakeFiles/CMakeRuleHashes.txt
index e6368a1..a0fd2e8 100644
--- a/build_dir/CMakeFiles/CMakeRuleHashes.txt
+++ b/build_dir/CMakeFiles/CMakeRuleHashes.txt
@@ -1,2 +1,4 @@
 # Hashes of file build rules.
+6a253ba44df170127a4111ab6ac219ef CMakeFiles/BIC_TEST_BENCH2_Solution.dir/Fusion_Image_Upscale/FusionImage/BIC_TEST_BENCH2/BIC_TEST_BENCH2_Solution_generated_solution.cu.o
 805ca436abdce9d35d643b67e5d7b016 CMakeFiles/FusionImage_Solution.dir/Fusion_Image_Upscale/FusionImage/FusionImage_Solution_generated_solution.cu.o
+4e09403f0066792bdd65a91c1c4ae0b8 CMakeFiles/GUAS_TEST_BENCH_Solution.dir/Fusion_Image_Upscale/FusionImage/GUASS_TEST_BENCH/GUAS_TEST_BENCH_Solution_generated_solution.cu.o
diff --git a/build_dir/CMakeFiles/Makefile.cmake b/build_dir/CMakeFiles/Makefile.cmake
index b77ed9c..306b85d 100644
--- a/build_dir/CMakeFiles/Makefile.cmake
+++ b/build_dir/CMakeFiles/Makefile.cmake
@@ -10,9 +10,13 @@ set(CMAKE_MAKEFILE_DEPENDS
   "CMakeFiles/3.28.3/CMakeCCompiler.cmake"
   "CMakeFiles/3.28.3/CMakeCXXCompiler.cmake"
   "CMakeFiles/3.28.3/CMakeSystem.cmake"
-  "CMakeFiles/FusionImage_Solution.dir/Fusion_Image_Upscale/FusionImage/FusionImage_Solution_generated_solution.cu.o.cmake.pre-gen"
-  "CMakeFiles/FusionImage_Solution.dir/Fusion_Image_Upscale/FusionImage/FusionImage_Solution_generated_solution.cu.o.depend"
+  "CMakeFiles/BIC_TEST_BENCH2_Solution.dir/Fusion_Image_Upscale/FusionImage/BIC_TEST_BENCH2/BIC_TEST_BENCH2_Solution_generated_solution.cu.o.cmake.pre-gen"
+  "CMakeFiles/BIC_TEST_BENCH2_Solution.dir/Fusion_Image_Upscale/FusionImage/BIC_TEST_BENCH2/BIC_TEST_BENCH2_Solution_generated_solution.cu.o.depend"
+  "CMakeFiles/GUAS_TEST_BENCH_Solution.dir/Fusion_Image_Upscale/FusionImage/GUASS_TEST_BENCH/GUAS_TEST_BENCH_Solution_generated_solution.cu.o.cmake.pre-gen"
+  "CMakeFiles/GUAS_TEST_BENCH_Solution.dir/Fusion_Image_Upscale/FusionImage/GUASS_TEST_BENCH/GUAS_TEST_BENCH_Solution_generated_solution.cu.o.depend"
   "/home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/labs/CMakeLists.txt"
+  "/home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/labs/Fusion_Image_Upscale/FusionImage/BIC_TEST_BENCH2/sources.cmake"
+  "/home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/labs/Fusion_Image_Upscale/FusionImage/GUASS_TEST_BENCH/sources.cmake"
   "/home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/labs/Fusion_Image_Upscale/FusionImage/sources.cmake"
   "/home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/labs/Fusion_Image_Upscale/sources.cmake"
   "/opt/ohpc/pub/apps/cmake/3.28.3/share/cmake-3.28/Modules/CMakeCInformation.cmake"
@@ -53,12 +57,15 @@ set(CMAKE_MAKEFILE_OUTPUTS
 
 # Byproducts of CMake generate step:
 set(CMAKE_MAKEFILE_PRODUCTS
-  "CMakeFiles/FusionImage_Solution.dir/Fusion_Image_Upscale/FusionImage/FusionImage_Solution_generated_solution.cu.o.cmake.pre-gen"
-  "CMakeFiles/FusionImage_Solution.dir/Fusion_Image_Upscale/FusionImage/FusionImage_Solution_generated_solution.cu.o.Release.cmake"
+  "CMakeFiles/GUAS_TEST_BENCH_Solution.dir/Fusion_Image_Upscale/FusionImage/GUASS_TEST_BENCH/GUAS_TEST_BENCH_Solution_generated_solution.cu.o.cmake.pre-gen"
+  "CMakeFiles/BIC_TEST_BENCH2_Solution.dir/Fusion_Image_Upscale/FusionImage/BIC_TEST_BENCH2/BIC_TEST_BENCH2_Solution_generated_solution.cu.o.cmake.pre-gen"
+  "CMakeFiles/GUAS_TEST_BENCH_Solution.dir/Fusion_Image_Upscale/FusionImage/GUASS_TEST_BENCH/GUAS_TEST_BENCH_Solution_generated_solution.cu.o.Release.cmake"
+  "CMakeFiles/BIC_TEST_BENCH2_Solution.dir/Fusion_Image_Upscale/FusionImage/BIC_TEST_BENCH2/BIC_TEST_BENCH2_Solution_generated_solution.cu.o.Release.cmake"
   "CMakeFiles/CMakeDirectoryInformation.cmake"
   )
 
 # Dependency information for all targets:
 set(CMAKE_DEPEND_INFO_FILES
-  "CMakeFiles/FusionImage_Solution.dir/DependInfo.cmake"
+  "CMakeFiles/GUAS_TEST_BENCH_Solution.dir/DependInfo.cmake"
+  "CMakeFiles/BIC_TEST_BENCH2_Solution.dir/DependInfo.cmake"
   )
diff --git a/build_dir/CMakeFiles/Makefile2 b/build_dir/CMakeFiles/Makefile2
index 14c8940..3091cfa 100644
--- a/build_dir/CMakeFiles/Makefile2
+++ b/build_dir/CMakeFiles/Makefile2
@@ -63,7 +63,8 @@ CMAKE_BINARY_DIR = /home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/build_
 # Directory level rules for the build root directory
 
 # The main recursive "all" target.
-all: CMakeFiles/FusionImage_Solution.dir/all
+all: CMakeFiles/GUAS_TEST_BENCH_Solution.dir/all
+all: CMakeFiles/BIC_TEST_BENCH2_Solution.dir/all
 .PHONY : all
 
 # The main recursive "preinstall" target.
@@ -71,34 +72,61 @@ preinstall:
 .PHONY : preinstall
 
 # The main recursive "clean" target.
-clean: CMakeFiles/FusionImage_Solution.dir/clean
+clean: CMakeFiles/GUAS_TEST_BENCH_Solution.dir/clean
+clean: CMakeFiles/BIC_TEST_BENCH2_Solution.dir/clean
 .PHONY : clean
 
 #=============================================================================
-# Target rules for target CMakeFiles/FusionImage_Solution.dir
+# Target rules for target CMakeFiles/GUAS_TEST_BENCH_Solution.dir
 
 # All Build rule for target.
-CMakeFiles/FusionImage_Solution.dir/all:
-	$(MAKE) $(MAKESILENT) -f CMakeFiles/FusionImage_Solution.dir/build.make CMakeFiles/FusionImage_Solution.dir/depend
-	$(MAKE) $(MAKESILENT) -f CMakeFiles/FusionImage_Solution.dir/build.make CMakeFiles/FusionImage_Solution.dir/build
-	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --progress-dir=/home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/build_dir/CMakeFiles --progress-num=1,2 "Built target FusionImage_Solution"
-.PHONY : CMakeFiles/FusionImage_Solution.dir/all
+CMakeFiles/GUAS_TEST_BENCH_Solution.dir/all:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles/GUAS_TEST_BENCH_Solution.dir/build.make CMakeFiles/GUAS_TEST_BENCH_Solution.dir/depend
+	$(MAKE) $(MAKESILENT) -f CMakeFiles/GUAS_TEST_BENCH_Solution.dir/build.make CMakeFiles/GUAS_TEST_BENCH_Solution.dir/build
+	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --progress-dir=/home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/build_dir/CMakeFiles --progress-num=3,4 "Built target GUAS_TEST_BENCH_Solution"
+.PHONY : CMakeFiles/GUAS_TEST_BENCH_Solution.dir/all
 
 # Build rule for subdir invocation for target.
-CMakeFiles/FusionImage_Solution.dir/rule: cmake_check_build_system
+CMakeFiles/GUAS_TEST_BENCH_Solution.dir/rule: cmake_check_build_system
 	$(CMAKE_COMMAND) -E cmake_progress_start /home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/build_dir/CMakeFiles 2
-	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 CMakeFiles/FusionImage_Solution.dir/all
+	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 CMakeFiles/GUAS_TEST_BENCH_Solution.dir/all
 	$(CMAKE_COMMAND) -E cmake_progress_start /home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/build_dir/CMakeFiles 0
-.PHONY : CMakeFiles/FusionImage_Solution.dir/rule
+.PHONY : CMakeFiles/GUAS_TEST_BENCH_Solution.dir/rule
 
 # Convenience name for target.
-FusionImage_Solution: CMakeFiles/FusionImage_Solution.dir/rule
-.PHONY : FusionImage_Solution
+GUAS_TEST_BENCH_Solution: CMakeFiles/GUAS_TEST_BENCH_Solution.dir/rule
+.PHONY : GUAS_TEST_BENCH_Solution
 
 # clean rule for target.
-CMakeFiles/FusionImage_Solution.dir/clean:
-	$(MAKE) $(MAKESILENT) -f CMakeFiles/FusionImage_Solution.dir/build.make CMakeFiles/FusionImage_Solution.dir/clean
-.PHONY : CMakeFiles/FusionImage_Solution.dir/clean
+CMakeFiles/GUAS_TEST_BENCH_Solution.dir/clean:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles/GUAS_TEST_BENCH_Solution.dir/build.make CMakeFiles/GUAS_TEST_BENCH_Solution.dir/clean
+.PHONY : CMakeFiles/GUAS_TEST_BENCH_Solution.dir/clean
+
+#=============================================================================
+# Target rules for target CMakeFiles/BIC_TEST_BENCH2_Solution.dir
+
+# All Build rule for target.
+CMakeFiles/BIC_TEST_BENCH2_Solution.dir/all:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles/BIC_TEST_BENCH2_Solution.dir/build.make CMakeFiles/BIC_TEST_BENCH2_Solution.dir/depend
+	$(MAKE) $(MAKESILENT) -f CMakeFiles/BIC_TEST_BENCH2_Solution.dir/build.make CMakeFiles/BIC_TEST_BENCH2_Solution.dir/build
+	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --progress-dir=/home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/build_dir/CMakeFiles --progress-num=1,2 "Built target BIC_TEST_BENCH2_Solution"
+.PHONY : CMakeFiles/BIC_TEST_BENCH2_Solution.dir/all
+
+# Build rule for subdir invocation for target.
+CMakeFiles/BIC_TEST_BENCH2_Solution.dir/rule: cmake_check_build_system
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/build_dir/CMakeFiles 2
+	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 CMakeFiles/BIC_TEST_BENCH2_Solution.dir/all
+	$(CMAKE_COMMAND) -E cmake_progress_start /home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/build_dir/CMakeFiles 0
+.PHONY : CMakeFiles/BIC_TEST_BENCH2_Solution.dir/rule
+
+# Convenience name for target.
+BIC_TEST_BENCH2_Solution: CMakeFiles/BIC_TEST_BENCH2_Solution.dir/rule
+.PHONY : BIC_TEST_BENCH2_Solution
+
+# clean rule for target.
+CMakeFiles/BIC_TEST_BENCH2_Solution.dir/clean:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles/BIC_TEST_BENCH2_Solution.dir/build.make CMakeFiles/BIC_TEST_BENCH2_Solution.dir/clean
+.PHONY : CMakeFiles/BIC_TEST_BENCH2_Solution.dir/clean
 
 #=============================================================================
 # Special targets to cleanup operation of make.
diff --git a/build_dir/CMakeFiles/TargetDirectories.txt b/build_dir/CMakeFiles/TargetDirectories.txt
index bd7ba47..73519e0 100644
--- a/build_dir/CMakeFiles/TargetDirectories.txt
+++ b/build_dir/CMakeFiles/TargetDirectories.txt
@@ -1,3 +1,4 @@
-/home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/build_dir/CMakeFiles/FusionImage_Solution.dir
+/home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/build_dir/CMakeFiles/GUAS_TEST_BENCH_Solution.dir
+/home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/build_dir/CMakeFiles/BIC_TEST_BENCH2_Solution.dir
 /home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/build_dir/CMakeFiles/edit_cache.dir
 /home/u13/matthewt1441/ece569/Fusion_Image_Upscale_HPC/build_dir/CMakeFiles/rebuild_cache.dir
diff --git a/build_dir/CMakeFiles/progress.marks b/build_dir/CMakeFiles/progress.marks
index 0cfbf08..b8626c4 100644
--- a/build_dir/CMakeFiles/progress.marks
+++ b/build_dir/CMakeFiles/progress.marks
@@ -1 +1 @@
-2
+4
diff --git a/build_dir/Makefile b/build_dir/Makefile
index 1c97838..c6a3aa4 100644
--- a/build_dir/Makefile
+++ b/build_dir/Makefile
@@ -117,17 +117,30 @@ depend:
 .PHONY : depend
 
 #=============================================================================
-# Target rules for targets named FusionImage_Solution
+# Target rules for targets named GUAS_TEST_BENCH_Solution
 
 # Build rule for target.
-FusionImage_Solution: cmake_check_build_system
-	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 FusionImage_Solution
-.PHONY : FusionImage_Solution
+GUAS_TEST_BENCH_Solution: cmake_check_build_system
+	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 GUAS_TEST_BENCH_Solution
+.PHONY : GUAS_TEST_BENCH_Solution
 
 # fast build rule for target.
-FusionImage_Solution/fast:
-	$(MAKE) $(MAKESILENT) -f CMakeFiles/FusionImage_Solution.dir/build.make CMakeFiles/FusionImage_Solution.dir/build
-.PHONY : FusionImage_Solution/fast
+GUAS_TEST_BENCH_Solution/fast:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles/GUAS_TEST_BENCH_Solution.dir/build.make CMakeFiles/GUAS_TEST_BENCH_Solution.dir/build
+.PHONY : GUAS_TEST_BENCH_Solution/fast
+
+#=============================================================================
+# Target rules for targets named BIC_TEST_BENCH2_Solution
+
+# Build rule for target.
+BIC_TEST_BENCH2_Solution: cmake_check_build_system
+	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 BIC_TEST_BENCH2_Solution
+.PHONY : BIC_TEST_BENCH2_Solution
+
+# fast build rule for target.
+BIC_TEST_BENCH2_Solution/fast:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles/BIC_TEST_BENCH2_Solution.dir/build.make CMakeFiles/BIC_TEST_BENCH2_Solution.dir/build
+.PHONY : BIC_TEST_BENCH2_Solution/fast
 
 # Help Target
 help:
@@ -137,7 +150,8 @@ help:
 	@echo "... depend"
 	@echo "... edit_cache"
 	@echo "... rebuild_cache"
-	@echo "... FusionImage_Solution"
+	@echo "... BIC_TEST_BENCH2_Solution"
+	@echo "... GUAS_TEST_BENCH_Solution"
 .PHONY : help
 
 
diff --git a/build_dir/guass.slurm b/build_dir/guass.slurm
old mode 100644
new mode 100755
index fd5761c..f8afc3e
--- a/build_dir/guass.slurm
+++ b/build_dir/guass.slurm
@@ -31,7 +31,7 @@
 ###module load cuda11/11.0
 
 ### set directory for job execution, replace the following path with your own path
-hw_path=~matthewt1441/ece569/Fusion_Image_Upscale/build_dir
+hw_path=~matthewt1441/ece569/Fusion_Image_Upscale_HPC/build_dir
 
 cd $hw_path
 
@@ -83,9 +83,10 @@ do
         do
             for block_dim_x in ${DIM_X[@]}
             do
-                file=guas_$((GAME_COUNT))_$((scale))_$((block_dim)).txt
-                ./GUASS_TEST_BENCH_Solution $scale $block_dim_x $block_dim_y $game -t vector > Kernel_Testing/GUASS/$file
+                file=gaus_$((GAME_COUNT))_$((scale))_$((block_dim_y))_$((block_dim_x)).txt
+                ./GUAS_TEST_BENCH_Solution $scale $block_dim_y $block_dim_x $game -t vector > Kernel_Testing/GAUSS/$file
+            done
         done
     done
     GAME_COUNT=$((GAME_COUNT+1))
-done
\ No newline at end of file
+done
diff --git a/labs/Fusion_Image_Upscale/FusionImage/GUASS_TEST_BENCH/solution.cu b/labs/Fusion_Image_Upscale/FusionImage/GUASS_TEST_BENCH/solution.cu
index 303ecf5..9b7eece 100644
--- a/labs/Fusion_Image_Upscale/FusionImage/GUASS_TEST_BENCH/solution.cu
+++ b/labs/Fusion_Image_Upscale/FusionImage/GUASS_TEST_BENCH/solution.cu
@@ -14,7 +14,7 @@
 int main(int argc, char* argv[])
 {
 
-    int scale = atoi(argv[1]); int block_dim_x = atoi(argv[2]); int block_dim_y = atoi(argv[3]);
+    int scale = atoi(argv[1]); int block_dim_y = atoi(argv[2]); int block_dim_x = atoi(argv[3]);
     int width;
     int height;
 
@@ -158,6 +158,10 @@ int main(int argc, char* argv[])
         dim3 h_Guas_Grid(((big_width - 1) / h_Guas_Block.x) + 1, ((big_height - 1) / h_Guas_Block.y) + 1);     //Calculate the number of blocks needed for the dimension. 1.0 * Forces Double
         dim3 v_Guas_Block(block_dim_x, block_dim_y);
         dim3 v_Guas_Grid(((big_width - 1) / v_Guas_Block.x) + 1, ((big_height - 1) / v_Guas_Block.y) + 1);     //Calculate the number of blocks needed for the dimension. 1.0 * Forces Double
+        dim3 Gaus_Naive_Block(block_dim_x, block_dim_y);
+        dim3 Gaus_Naive_Grid(((big_width - 1) / Gaus_Naive_Block.x) + 1, ((big_height - 1) / Gaus_Naive_Block.y) + 1); 
+
+
 
         cudaError_t error;
         //**************** Setup Kernel ****************//
@@ -219,17 +223,17 @@ int main(int argc, char* argv[])
             //printf("GUAS SERIAL CODE, %f, ms\n", processing_time/1000);
 
             //WRITE THE PICTURES FOR COMPARISON
-            if(i == ITERATIONS-1)
-            {
-                Map2Greyscale(h_big_img_BLURRED_ARTIFACT_grey   , h_blurred_artifact_map, big_width, big_height, 255);   //Artifact values should be between 0-255;
-                writePPMGrey("./GUAS_TEST/GUAS_SERIAL.ppm", (char*)h_big_img_BLURRED_ARTIFACT_grey, big_width, big_height);
-                cudaDeviceSynchronize();
-            }
+            // if(i == ITERATIONS-1)
+            // {
+            //     Map2Greyscale(h_big_img_BLURRED_ARTIFACT_grey   , h_blurred_artifact_map, big_width, big_height, 255);   //Artifact values should be between 0-255;
+            //     writePPMGrey("./GUAS_TEST/GUAS_SERIAL.ppm", (char*)h_big_img_BLURRED_ARTIFACT_grey, big_width, big_height);
+            //     cudaDeviceSynchronize();
+            // }
             ////////////TIME GUASSIAN WITH SERIAL CODE IMPLEMENTATION/////////////////////
             
             ////////////TIME GUASSIAN NAIVE CUDA IMPLEMENTATION/////////////////////
             cudaEventRecord(astartEvent1, 0);
-            GuassianBlur_Threshold_Map_Naive_Kernel <<< NN_Grid, NN_Block >>>   (d_big_blurred_artifact_map , d_big_artifact_map, big_width, big_height, 3, 1.5, 0.05);
+            GuassianBlur_Threshold_Map_Naive_Kernel <<< Gaus_Naive_Grid, Gaus_Naive_Block >>>   (d_big_blurred_artifact_map , d_big_artifact_map, big_width, big_height, 3, 1.5, 0.05);
             cudaEventRecord(astopEvent1, 0);
             
             error = cudaGetLastError();
@@ -247,14 +251,14 @@ int main(int argc, char* argv[])
             //printf("GUASSIAN NAIVE, %f, ms\n", aelapsedTime1);
 
             //WRITE THE PICTURES FOR COMPARISON
-            if(i == ITERATIONS-1)
-            {            
-                //COPY OVER IMAGE DATA
-                cudaMemcpy(h_blurred_artifact_map   , d_big_blurred_artifact_map, sizeof(float) * big_width * big_height    , cudaMemcpyDeviceToHost);
-                Map2Greyscale(h_big_img_BLURRED_ARTIFACT_grey   , h_blurred_artifact_map, big_width, big_height, 255);   //Artifact values should be between 0-255;
-                writePPMGrey("./GUAS_TEST/GUAS_NAIVE.ppm", (char*)h_big_img_BLURRED_ARTIFACT_grey, big_width, big_height);
-                cudaDeviceSynchronize();
-            }
+            // if(i == ITERATIONS-1)
+            // {            
+            //     //COPY OVER IMAGE DATA
+            //     cudaMemcpy(h_blurred_artifact_map   , d_big_blurred_artifact_map, sizeof(float) * big_width * big_height    , cudaMemcpyDeviceToHost);
+            //     Map2Greyscale(h_big_img_BLURRED_ARTIFACT_grey   , h_blurred_artifact_map, big_width, big_height, 255);   //Artifact values should be between 0-255;
+            //     writePPMGrey("./GUAS_TEST/GUAS_NAIVE.ppm", (char*)h_big_img_BLURRED_ARTIFACT_grey, big_width, big_height);
+            //     cudaDeviceSynchronize();
+            // }
             ////////////TIME GUASSIAN NAIVE CUDA IMPLEMENTATION/////////////////////
 
 
@@ -287,14 +291,14 @@ int main(int argc, char* argv[])
             //printf("GUASSIAN VERTICAL SEPERABLE, %f, ms\n", aelapsedTime2);
 
             //WRITE THE PICTURES FOR COMPARISON
-            if(i == ITERATIONS-1)
-            {            
-                //COPY OVER IMAGE DATA
-                cudaMemcpy(h_blurred_artifact_map   , d_big_blurred_artifact_map, sizeof(float) * big_width * big_height    , cudaMemcpyDeviceToHost);
-                Map2Greyscale(h_big_img_BLURRED_ARTIFACT_grey   , h_blurred_artifact_map, big_width, big_height, 255);   //Artifact values should be between 0-255;
-                writePPMGrey("./GUAS_TEST/GUAS_SEPERABLE_CONVOLVE.ppm", (char*)h_big_img_BLURRED_ARTIFACT_grey, big_width, big_height);
-                cudaDeviceSynchronize();
-            }
+            // if(i == ITERATIONS-1)
+            // {            
+            //     //COPY OVER IMAGE DATA
+            //     cudaMemcpy(h_blurred_artifact_map   , d_big_blurred_artifact_map, sizeof(float) * big_width * big_height    , cudaMemcpyDeviceToHost);
+            //     Map2Greyscale(h_big_img_BLURRED_ARTIFACT_grey   , h_blurred_artifact_map, big_width, big_height, 255);   //Artifact values should be between 0-255;
+            //     writePPMGrey("./GUAS_TEST/GUAS_SEPERABLE_CONVOLVE.ppm", (char*)h_big_img_BLURRED_ARTIFACT_grey, big_width, big_height);
+            //     cudaDeviceSynchronize();
+            // }
             ////////////TIME GUASSIAN WITH SEPERABLE CUDA IMPLEMENTATION/////////////////////
 
         }
